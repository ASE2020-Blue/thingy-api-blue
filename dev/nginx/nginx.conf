# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 512;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    # Logging
    log_format custom '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" "$gzip_ratio"';
    error_log  /var/log/nginx/error.log crit;
    access_log /var/log/nginx/access.log custom;

    upstream backend-upstream {
        server localhost:8080;
        server backend:8080;
    }

    server {
        listen 80;
        listen [::]:80;
        root  /usr/share/nginx/html/dist;
        index index.html;

        access_log  /var/log/nginx/server.access.log custom;

          location = /favicon.ico { log_not_found off; }


        # Redirect API requests
        location /api/ {
            rewrite /api/(.*) /$1 break;
            # proxy_pass http://backend:8080;
            proxy_pass http://backend:8080;
        }


        location / {
          #proxy_pass http://localhost:8080;
          try_files $uri $uri/ /index.html;
        }



        # Javascript and CSS files
        #location ~* \.(?:css|js)$ {
        #    try_files $uri =404;
        #    expires 1y;
        #    access_log off;
        #    add_header Cache-Control "public";
        #}


        # Any route containing a file extension (e.g. /devicesfile.js)
        #location ~ ^.+\..+$ {
        #    try_files $uri =404;
        #}

    }


}