# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 512;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    # Logging
    log_format custom '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" "$gzip_ratio"';
    error_log  /var/log/nginx/error.log crit;
    access_log /var/log/nginx/access.log custom;

    # upstream backend-upstream {
    #     # server localhost:8080;
    #     server backend:8080;
    # }

   server {
        listen 80 default_server;
        server_name *.${DOMAIN} ${DOMAIN};
        # Enables or disables emitting nginx version on error pages and in the “Server”
        # response header field.
        # server_tokens off;

        location / {
            return 301 https://$host$request_uri;
        }

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }

    server {
        listen 443 ssl;
        server_name *.${DOMAIN} ${DOMAIN};
        # Enables or disables emitting nginx version on error pages and in the “Server”
        # response header field.
        # server_tokens off;

        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            proxy_pass http://${DOMAIN};
        }
    }

    #     server_name *.${DOMAIN} ${DOMAIN};
    # }

    # server {
    #     listen 443 ssl;
    #     # IPv6
    #     listen [::]:443 ssl;
    #     server_name *.${DOMAIN} ${DOMAIN};

        # root /usr/share/nginx/html/dist;
        # index index.html;

        # access_log /var/log/nginx/server.access.log custom;

        # location = /favicon.ico {
        #     log_not_found off;
        # }

        # # Redirect API requests
        # location /api/ {
        #     rewrite /api/(.*) /$1 break;
        #     proxy_pass http://backend:8080;
        # }

        # # All locations
        # location / {
        #   try_files $uri $uri/ /index.html;
        # }

        # Javascript and CSS files
        #location ~* \.(?:css|js)$ {
        #    try_files $uri =404;
        #    expires 1y;
        #    access_log off;
        #    add_header Cache-Control "public";
        #}

        # Any route containing a file extension (e.g. /devicesfile.js)
        #location ~ ^.+\..+$ {
        #    try_files $uri =404;
        #}
    # }
}