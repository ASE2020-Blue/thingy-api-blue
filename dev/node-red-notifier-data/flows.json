[{"id":"522f6bba.b3f424","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"8316d426.c53568","type":"grpc-server","port":"5001","name":"Messenger-gRPC-Server","server":"messenger","protoFile":"syntax = \"proto3\";\n\nimport \"google/protobuf/empty.proto\";\n\n\n\npackage messenger;\n\n/**\n * Services that the bot service provides to the rest of the infrastructure\n */\nservice Messenger {\n  rpc SendTestMessage (TestMessageRequest) returns (google.protobuf.Empty);\n}\n\nmessage TestMessageRequest {\n  string chatId = 1;\n  string text = 2;\n}\n\n\nenum MessageType {\n  PLAIN = 0;\n  MARKDOWN = 1;\n}\n","ca":"","chain":"","key":"","mutualTls":false,"localServer":true},{"id":"b2fc11be.a3bc5","type":"mqtt-broker","name":"ASE-Broker","broker":"mqtt.thing.zone","port":"1894","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"a250d435.7e6168","type":"grpc-call","z":"522f6bba.b3f424","name":"SendTestMessage","server":"8316d426.c53568","service":"Messenger","method":"SendTestMessage","chain":"","key":"","x":630,"y":120,"wires":[["f09a480b.67beb8"]]},{"id":"9caea6af.30b148","type":"inject","z":"522f6bba.b3f424","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"chatId\": \"Alain'sId\", \"text\": \"Hello my MAN!!\"}","payloadType":"json","x":250,"y":120,"wires":[["a250d435.7e6168"]]},{"id":"f09a480b.67beb8","type":"debug","z":"522f6bba.b3f424","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":950,"y":120,"wires":[]},{"id":"3fb2dcf9.a9c1f4","type":"mqtt in","z":"522f6bba.b3f424","name":"Thingy update","topic":"$(THINGY_MQTT_TOPIC)","qos":"0","datatype":"json","broker":"b2fc11be.a3bc5","x":90,"y":320,"wires":[["dba2d53f.2daf48"]]},{"id":"b38d3378.f69cb","type":"debug","z":"522f6bba.b3f424","name":"Only button event","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":790,"y":240,"wires":[]},{"id":"b87495f6.afbac8","type":"switch","z":"522f6bba.b3f424","name":"Filter button event","property":"payload.appId","propertyType":"msg","rules":[{"t":"eq","v":"BUTTON","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":610,"y":320,"wires":[["b38d3378.f69cb","e61b07fc.12aca8"]]},{"id":"c056685e.deeeb8","type":"debug","z":"522f6bba.b3f424","name":"All thingy update","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":410,"y":240,"wires":[]},{"id":"e61b07fc.12aca8","type":"button-events","z":"522f6bba.b3f424","name":"","outputs":2,"inputField":"payload.data","inputFieldType":"msg","outputField":"payload.btnEvent","outputFieldType":"msg","downValue":"1","downValueType":"str","upValue":"0","upValueType":"str","idleValue":"1","clickedInterval":200,"pressedInterval":200,"debounceInterval":30,"events":[{"type":"clicked"},{"type":"double_clicked"}],"x":980,"y":320,"wires":[["6027f4b4.6c30ec"],["5d0a6e58.1865"]]},{"id":"5d0a6e58.1865","type":"debug","z":"522f6bba.b3f424","name":"Double click debug","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1310,"y":320,"wires":[]},{"id":"6027f4b4.6c30ec","type":"debug","z":"522f6bba.b3f424","name":"Click debug","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1130,"y":240,"wires":[]},{"id":"bd742773.3f48c8","type":"comment","z":"522f6bba.b3f424","name":"TODO: ask location","info":"","x":1310,"y":360,"wires":[]},{"id":"dba2d53f.2daf48","type":"function","z":"522f6bba.b3f424","name":"","func":"// things/+/shadow/update\nconst topicConfig = env.get('THINGY_MQTT_TOPIC');\n\n\nfunction get_matches (topicConfig, topic) {\n    let groupCaptureRegex = topicConfig\n        .replace(/\\+/g, \"(.+)\") // replace + wildcard level\n        .replace(/#$/, \"(.+)$\"); // replace # ending wildcard\n\n    return (topic.match(new RegExp(groupCaptureRegex)) || [null])\n        .slice(1); // skip entire match at index 0\n}\n\nmsg.topic = get_matches(topicConfig, msg.topic)[0];\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":260,"y":320,"wires":[["c056685e.deeeb8","b87495f6.afbac8"]]}]